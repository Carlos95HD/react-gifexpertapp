{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","catg","className","placeholder","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE5B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAiBA,OACE,0BAAMC,SAXa,SAACC,GACpBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC9BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACtCN,EAAc,OAOd,2BACAO,UAAU,+DACVC,YAAY,SACZC,KAAK,OACLC,MAASX,EACTY,SAtBsB,SAACT,GAEzBF,EAAcE,EAAEU,OAAOF,Y,uBCTdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDAEuBC,UAAUH,GAFjC,+DAGFI,MAAMF,GAHJ,cAGfG,EAHe,gBAIEA,EAAKC,OAJP,uBAIbC,EAJa,EAIbA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVjB,kBAcdM,GAdc,4CAAH,sDCEPO,EAAc,SAAC,GAAqB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEpC,OACE,yBAAKT,UAAU,0CACb,yBAAKuB,IAAKd,EAAKe,IAAML,EAAQnB,UAAU,gBACvC,uBAAGA,UAAU,2BAA4BmB,KCFlCM,EAAU,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SAExB,ECJ0B,SAACA,GAC3B,MAA0BhB,mBAAS,CACjCuB,KAAM,GACNY,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OATAC,qBAAU,WACRvB,EAAQC,GAAUuB,MAAK,SAACC,GACtBH,EAAS,CACPd,KAAMiB,EACNL,SAAS,SAGZ,CAACnB,IAEGoB,EDXyBK,CAAazB,GAAhCa,EAAb,EAAQN,KAAaY,EAArB,EAAqBA,QAIrB,OACE,oCACA,wBAAI1B,UAAU,0FAA0FO,GAEvGmB,GAAW,uBAAG1B,UAAU,4DAAb,WAEZ,yBAAKA,UAAU,aAGXoB,EAAOJ,KAAK,SAAAC,GAAG,OACb,kBAAC,EAAD,eACAgB,IAAKhB,EAAIC,IACLD,UEYCiB,EA9BM,WAGnB,MAAoC3C,mBAAS,CAAE,YAA/C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAMA,OACE,oCACA,wBAAIU,UAAU,0EAAd,iBACA,kBAAC,EAAD,CAAaV,cAAeA,IAC5B,6BAEA,wBAAIU,UAAU,QAEVmC,EAAWnB,KAAK,SAAAT,GAAQ,OAClB,kBAAC,EAAD,CACA0B,IAAK1B,EACLA,SAAUA,U,MCnBxB6B,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.de43dd75.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n\r\n  const [inputValue, setInputValue] = useState('')\r\n\r\n  const handleInputChange = (e) => {\r\n    // console.log( e.target.value )\r\n    setInputValue(e.target.value)\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    // console.log('Submit')\r\n    if ( inputValue.trim().length > 2 ) {\r\n      setCategories( catg => [inputValue,...catg] )\r\n      setInputValue('')\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <form onSubmit={ handleSubmit }>\r\n      <input \r\n      className='mb-4 mt-2 shadow-lg p-2 font-mono rounded focus:outline-none'\r\n      placeholder='Search'\r\n      type='text'\r\n      value= { inputValue }\r\n      onChange={ handleInputChange }\r\n      />\r\n\r\n    </form>\r\n  )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async (category) => {\r\n  const url =\r\n    `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=NaxrRYxd65PmaG8pNwSPfPPDDJWPz0vW`;\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n\r\n  const gifs = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url,\r\n    };\r\n  });\r\n\r\n  return gifs;\r\n};","import React from 'react'\r\n\r\nexport const GifGridItem = ( { title, url} ) => {\r\n\r\n  return (\r\n    <div className='card animate__animated animate__fadeIn'>\r\n      <img src={url} alt={ title } className='text-center'/>\r\n      <p className='font-sans text-gray-800'>{ title }</p>\r\n    </div>\r\n  )\r\n}","import React from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\n// import { getGifs } from \"../helpers/getGifs\";\r\nimport {GifGridItem }from './GifGridItem'\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n  const { data:images, loading} = useFetchGifs(category);\r\n\r\n  // getGifs();\r\n\r\n  return (\r\n    <>\r\n    <h3 className='animate__animated animate__fadeIn font-mono mb-5 mt-5 text-base text-2xl text-gray-800'>{category}</h3>\r\n\r\n    {loading && <p className='font-mono animate__animated animate__flash text-gray-800'>Loading</p>}\r\n\r\n    <div className='card-grid'>\r\n\r\n      {\r\n        images.map( img  => (\r\n          <GifGridItem\r\n          key={img.id}\r\n          {...img}\r\n          />\r\n        ))\r\n      }\r\n\r\n    </div>\r\n    </>\r\n\r\n  );\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setstate] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then((imgs) => {\r\n      setstate({\r\n        data: imgs,\r\n        loading: false,\r\n      });\r\n    });\r\n  }, [category]);\r\n\r\n  return state; // (data:[], loading = true )\r\n};\r\n","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n  // const categories = [ 'One Punch', 'Samurai X', 'Dragon Ball' ];\r\n  const [categories, setCategories] = useState([ 'Welcome' ])\r\n\r\n  // const handleAdd = () => {\r\n  //   setCategories([...categories, 'Simpsons'])\r\n  // }\r\n\r\n  return (\r\n    <>\r\n    <h2 className='text-4xl font-mono text-gray-800 animate__animated animate__backInLeft'>GifExpert-App</h2>\r\n    <AddCategory setCategories={setCategories}/>\r\n    <hr />\r\n\r\n    <ol className='mt-2'>\r\n      { \r\n        categories.map( category => (\r\n              <GifGrid \r\n              key={category}\r\n              category={category}\r\n              />\r\n        ))\r\n      }\r\n    </ol>\r\n\r\n    </>\r\n  )\r\n\r\n}\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExperApp from './GifExpertApp'\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExperApp />,\n  document.getElementById('root')\n);\n\n// GifExpertApp\n// <h2>GifExperApp</h2>\n// <hr />"],"sourceRoot":""}